{"ast":null,"code":"var _jsxFileName = \"/Users/warren/code/badenis19/front-end-exercices/techWorld/client/src/components/ProductList.js\";\nimport React, { useState } from 'react';\nimport { graphql } from 'react-apollo'; // To bind Apollo with React Component\n\n/* Queries */\n\nimport { getProductsQuery } from '../queries/queries';\n/* Component */\n\nimport Pagination from './Pagination';\n\nconst ProductList = props => {\n  const [currentPage, setCurrentPage] = useState(1); // start at page one\n\n  const [postsPerPage, setPostsPerPage] = useState(10);\n\n  const addProducts = product => {\n    props.addProduct(product);\n  };\n\n  const displayProducts = () => {\n    let data = props.data;\n\n    if (data.loading) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 15\n        }\n      }, \"Loading Products...\");\n    } else {\n      return data.products.map(product => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: product.id,\n          className: \"product col-xs-12 col-sm-6 col-md-6 col-lg-4 col-xl-3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"product-card\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"product-name\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          key: product.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }\n        }, product.name)), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"product-image\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"wrapper\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          key: product.id,\n          src: product.img_url,\n          alt: \"product\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 19\n          }\n        }))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"price-and-add-button\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          key: product.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }\n        }, \"\\xA3\", product.price.toFixed(2)), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-success\",\n          onClick: () => addProducts(product),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }\n        }, \"ADD TO BASKET\"))));\n      });\n    }\n  }; // Pagination logic\n\n\n  const indexOfLastPost = currentPage * postsPerPage; // to test\n\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = props.productsInBasket.slice(indexOfFirstPost, indexOfLastPost);\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, displayProducts()), /*#__PURE__*/React.createElement(Pagination, {\n    postsPerPage: postsPerPage,\n    totalPosts: props.productsInBasket.length,\n    paginate: paginate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default graphql(getProductsQuery)(ProductList); // query result accessible via props","map":{"version":3,"sources":["/Users/warren/code/badenis19/front-end-exercices/techWorld/client/src/components/ProductList.js"],"names":["React","useState","graphql","getProductsQuery","Pagination","ProductList","props","currentPage","setCurrentPage","postsPerPage","setPostsPerPage","addProducts","product","addProduct","displayProducts","data","loading","products","map","id","name","img_url","price","toFixed","indexOfLastPost","indexOfFirstPost","currentPosts","productsInBasket","slice","paginate","pageNumber","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { graphql } from 'react-apollo'; // To bind Apollo with React Component\n\n/* Queries */\nimport { getProductsQuery } from '../queries/queries'\n\n/* Component */\nimport Pagination from './Pagination'\n\nconst ProductList = (props) => {\n\n  const [currentPage, setCurrentPage] = useState(1); // start at page one\n  const [postsPerPage, setPostsPerPage] = useState(10);\n\n  const addProducts = (product) => {\n    props.addProduct(product);\n  }\n\n  const displayProducts = () => {\n    let data = props.data;\n    if (data.loading) {\n      return (<p>Loading Products...</p>)\n    } else {\n      return data.products.map(product => {\n        return (\n          <div key={product.id} className=\"product col-xs-12 col-sm-6 col-md-6 col-lg-4 col-xl-3\">\n            <div className=\"product-card\">\n              <div className=\"product-name\">\n                <p key={product.id}>{product.name}</p>\n              </div>\n              <div className=\"product-image\">\n                <div className=\"wrapper\">\n                  <img key={product.id} src={product.img_url} alt=\"product\" />\n                </div>\n              </div>\n              <div className=\"price-and-add-button\">\n                <p key={product.id}>Â£{product.price.toFixed(2)}</p>\n                <button className=\"btn btn-success\" onClick={() => addProducts(product)}>ADD TO BASKET</button>\n              </div>\n            </div>\n          </div>\n        )\n      })\n    }\n  }\n\n  // Pagination logic\n  const indexOfLastPost = currentPage * postsPerPage; // to test\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = props.productsInBasket.slice(indexOfFirstPost, indexOfLastPost);\n\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          {displayProducts()}\n        </div>\n        <Pagination postsPerPage={postsPerPage} totalPosts={props.productsInBasket.length} paginate={paginate} />\n      </div>\n    )\n  \n}\n\nexport default graphql(getProductsQuery)(ProductList); // query result accessible via props\n"]},"metadata":{},"sourceType":"module"}