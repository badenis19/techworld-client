{"ast":null,"code":"var _jsxFileName = \"/Users/warren/code/badenis19/front-end-exercices/techWorld/client/src/components/ProductList.js\";\nimport React, { useState } from 'react';\nimport { graphql } from 'react-apollo'; // To bind Apollo with React Component\n\n/* Queries */\n\nimport { getProductsQuery } from '../queries/queries';\n/* Component */\n// import Pagination from './Pagination'\n\nconst ProductList = ({\n  productsInBasket\n}) => {\n  // const [posts, setPosts] = useState([]);\n  // const [loading, setLoading] = useState(false); // default value false \n  // const [currentPage, setCurrentPage] = useState(1); // start at page one\n  // const [postsPerPage, setPostsPerPage] = useState(10);\n  const addProducts = product => {\n    this.props.addProduct(product);\n  };\n\n  const displayProducts = () => {\n    let data = this.props.data;\n\n    if (data.loading) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }\n      }, \"Loading Products...\");\n    } else {\n      return data.products.map(product => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: product.id,\n          className: \"product col-xs-12 col-sm-6 col-md-6 col-lg-4 col-xl-3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"product-card\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"product-name\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          key: product.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }\n        }, product.name)), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"product-image\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"wrapper\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          key: product.id,\n          src: product.img_url,\n          alt: \"product\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 19\n          }\n        }))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"price-and-add-button\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          key: product.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }\n        }, \"\\xA3\", product.price.toFixed(2)), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-success\",\n          onClick: () => this.addProducts(product),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }\n        }, \"ADD TO BASKET\"))));\n      });\n    }\n  }; // // Pagination logic\n  // const indexOfLastPost = currentPage * postsPerPage; // to test\n  // const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  // const currentPosts = productsInBasket.slice(indexOfFirstPost, indexOfLastPost);\n  // const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, displayProducts()));\n};\n\nexport default graphql(getProductsQuery)(ProductList); // query result accessible via props","map":{"version":3,"sources":["/Users/warren/code/badenis19/front-end-exercices/techWorld/client/src/components/ProductList.js"],"names":["React","useState","graphql","getProductsQuery","ProductList","productsInBasket","addProducts","product","props","addProduct","displayProducts","data","loading","products","map","id","name","img_url","price","toFixed"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,cAAxB,C,CAAwC;;AAExC;;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AAEA;AACA;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAwB;AAE1C;AACA;AACA;AACA;AAEA,QAAMC,WAAW,GAAIC,OAAD,IAAa;AAC/B,SAAKC,KAAL,CAAWC,UAAX,CAAsBF,OAAtB;AACD,GAFD;;AAIA,QAAMG,eAAe,GAAG,MAAM;AAC5B,QAAIC,IAAI,GAAG,KAAKH,KAAL,CAAWG,IAAtB;;AACA,QAAIA,IAAI,CAACC,OAAT,EAAkB;AAChB,0BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAR;AACD,KAFD,MAEO;AACL,aAAOD,IAAI,CAACE,QAAL,CAAcC,GAAd,CAAkBP,OAAO,IAAI;AAClC,4BACE;AAAK,UAAA,GAAG,EAAEA,OAAO,CAACQ,EAAlB;AAAsB,UAAA,SAAS,EAAC,uDAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAG,UAAA,GAAG,EAAER,OAAO,CAACQ,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqBR,OAAO,CAACS,IAA7B,CADF,CADF,eAIE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAK,UAAA,GAAG,EAAET,OAAO,CAACQ,EAAlB;AAAsB,UAAA,GAAG,EAAER,OAAO,CAACU,OAAnC;AAA4C,UAAA,GAAG,EAAC,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF,CAJF,eASE;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAG,UAAA,GAAG,EAAEV,OAAO,CAACQ,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAsBR,OAAO,CAACW,KAAR,CAAcC,OAAd,CAAsB,CAAtB,CAAtB,CADF,eAEE;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAoC,UAAA,OAAO,EAAE,MAAM,KAAKb,WAAL,CAAiBC,OAAjB,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFF,CATF,CADF,CADF;AAkBD,OAnBM,CAAP;AAoBD;AACF,GA1BD,CAX0C,CAuC1C;AACA;AACA;AACA;AAEA;;;AAGE,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,eAAe,EADlB,CADF,CADF;AASH,CAxDD;;AA0DA,eAAeR,OAAO,CAACC,gBAAD,CAAP,CAA0BC,WAA1B,CAAf,C,CAAuD","sourcesContent":["import React, { useState } from 'react';\nimport { graphql } from 'react-apollo'; // To bind Apollo with React Component\n\n/* Queries */\nimport { getProductsQuery } from '../queries/queries'\n\n/* Component */\n// import Pagination from './Pagination'\n\nconst ProductList = ({productsInBasket}) => {\n\n  // const [posts, setPosts] = useState([]);\n  // const [loading, setLoading] = useState(false); // default value false \n  // const [currentPage, setCurrentPage] = useState(1); // start at page one\n  // const [postsPerPage, setPostsPerPage] = useState(10);\n\n  const addProducts = (product) => {\n    this.props.addProduct(product);\n  }\n\n  const displayProducts = () => {\n    let data = this.props.data;\n    if (data.loading) {\n      return (<p>Loading Products...</p>)\n    } else {\n      return data.products.map(product => {\n        return (\n          <div key={product.id} className=\"product col-xs-12 col-sm-6 col-md-6 col-lg-4 col-xl-3\">\n            <div className=\"product-card\">\n              <div className=\"product-name\">\n                <p key={product.id}>{product.name}</p>\n              </div>\n              <div className=\"product-image\">\n                <div className=\"wrapper\">\n                  <img key={product.id} src={product.img_url} alt=\"product\" />\n                </div>\n              </div>\n              <div className=\"price-and-add-button\">\n                <p key={product.id}>Â£{product.price.toFixed(2)}</p>\n                <button className=\"btn btn-success\" onClick={() => this.addProducts(product)}>ADD TO BASKET</button>\n              </div>\n            </div>\n          </div>\n        )\n      })\n    }\n  }\n\n  // // Pagination logic\n  // const indexOfLastPost = currentPage * postsPerPage; // to test\n  // const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  // const currentPosts = productsInBasket.slice(indexOfFirstPost, indexOfLastPost);\n\n  // const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          {displayProducts()}\n        </div>\n        {/* <Pagination postsPerPage={postsPerPage} totalPosts={productsInBasket.length} paginate={paginate} /> */}\n      </div>\n    )\n  \n}\n\nexport default graphql(getProductsQuery)(ProductList); // query result accessible via props\n"]},"metadata":{},"sourceType":"module"}