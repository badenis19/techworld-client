{"ast":null,"code":"var _jsxFileName = \"/Users/warren/code/badenis19/front-end-exercices/techWorld/client/src/components/ProductList.js\";\nimport React, { Component } from 'react';\nimport { graphql } from 'react-apollo'; // To bind Apollo with React Component\n\nimport PropTypes from 'prop-types';\n/* Queries */\n\nimport { getProductsQuery } from '../queries/queries';\nimport '../App.scss';\n/* Component */\n\nimport EmptyMessage from './EmptyMessage';\n\nclass ProductList extends Component {\n  addProducts(product) {\n    product.isInBasket = true;\n    this.props.addProduct(product);\n  }\n\n  displayProducts() {\n    let data = this.props.data;\n\n    if (data.loading) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 15\n        }\n      }, \"Loading Products...\");\n    } else {\n      return data.products.map(product => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: product.id,\n          className: \"product col-xs-12 col-sm-6 col-md-6 col-lg-4 col-xl-3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"product-card\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"product-name\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          key: product.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }\n        }, product.name)), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"product-image\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"wrapper\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          key: product.id,\n          src: product.img_url,\n          alt: \"product\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 19\n          }\n        }))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"price-and-add-button\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          key: product.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }\n        }, \"\\xA3\", product.price.toFixed(2)), /*#__PURE__*/React.createElement(\"button\", {\n          className: product.isInBasket ? \"btn disable-button\" : \"btn btn-success\",\n          onClick: () => this.addProducts(product),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }\n        }, product.isInBasket ? \"ADDED\" : \"ADD TO BASKET\"))));\n      });\n    }\n  }\n\n  render() {\n    if (this.props.data.products) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"product-container container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"tw-intro\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, \"Here at \", /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 45\n        }\n      }, \"TechWorld\"), \" we sell only the very finest gaming mice on the market today with just one aim: to make it as easy as possible for a gamer to find the right rodent for their intended usage and budget..\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }, this.displayProducts()));\n    }\n\n    return /*#__PURE__*/React.createElement(EmptyMessage, {\n      message: \"Product are loading... Please wait\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    });\n  }\n\n}\n\nProductList.propTypes = {\n  addProduct: PropTypes.func.isRequired,\n  data: PropTypes.object.isRequired\n};\nexport default graphql(getProductsQuery)(ProductList); // query result accessible via props","map":{"version":3,"sources":["/Users/warren/code/badenis19/front-end-exercices/techWorld/client/src/components/ProductList.js"],"names":["React","Component","graphql","PropTypes","getProductsQuery","EmptyMessage","ProductList","addProducts","product","isInBasket","props","addProduct","displayProducts","data","loading","products","map","id","name","img_url","price","toFixed","render","propTypes","func","isRequired","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { graphql } from 'react-apollo'; // To bind Apollo with React Component\nimport PropTypes from 'prop-types';\n\n/* Queries */\nimport { getProductsQuery } from '../queries/queries'\nimport '../App.scss';\n\n/* Component */\nimport EmptyMessage from './EmptyMessage';\nclass ProductList extends Component {\n  addProducts(product) {\n    product.isInBasket = true;\n    this.props.addProduct(product);\n  }\n  displayProducts() {\n    let data = this.props.data;\n    if (data.loading) {\n      return (<p>Loading Products...</p>)\n    } else {\n      return data.products.map(product => {\n        return (\n          <div key={product.id} className=\"product col-xs-12 col-sm-6 col-md-6 col-lg-4 col-xl-3\">\n            <div className=\"product-card\">\n              <div className=\"product-name\">\n                <p key={product.id}>{product.name}</p>\n              </div>\n              <div className=\"product-image\">\n                <div className=\"wrapper\">\n                  <img key={product.id} src={product.img_url} alt=\"product\" />\n                </div>\n              </div>\n              <div className=\"price-and-add-button\">\n                <p key={product.id}>Â£{product.price.toFixed(2)}</p>\n                <button className={product.isInBasket ? \"btn disable-button\" : \"btn btn-success\"} onClick={() => this.addProducts(product)}>{product.isInBasket ? \"ADDED\" : \"ADD TO BASKET\"}</button>\n              </div>\n            </div>\n          </div>\n        )\n      })\n    }\n  }\n  render() {\n      if (this.props.data.products) {\n        return (\n          <div className=\"product-container container\">\n            <p className=\"tw-intro\">Here at <strong>TechWorld</strong> we sell only the very finest gaming mice on the market today with just one aim: to make it as easy as possible for a gamer to find the right rodent for their intended usage and budget..</p>\n            <div className=\"row\">\n              {this.displayProducts()}\n            </div>\n          </div>\n        )\n      }\n      return (\n        <EmptyMessage message=\"Product are loading... Please wait\" />\n      )\n  }\n}\n\n\nProductList.propTypes = {\n  addProduct: PropTypes.func.isRequired,\n  data: PropTypes.object.isRequired\n}\n\nexport default graphql(getProductsQuery)(ProductList); // query result accessible via props\n"]},"metadata":{},"sourceType":"module"}